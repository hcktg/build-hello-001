# A friendly name for this GitHub Action
name: My GitHub Pages CI/CD

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Make a copy of this repository visible to the GitHub Actions execution context.
      - name: Checkout
        uses: actions/checkout@v3
      # Enable GitHub Pages and extract various metadata about the website we intend to build from this repository.
      - name: Setup Pages
        uses: actions/configure-pages@v3
      # Grab the correct HTML files from this repository and get them ready for putting on the GitHub Pages website associated with this repository:  
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # We just want to copy HTML files from within /src/web -- everything above/beside it is not meant to live on the GitHub Pages website.
          path: './src/web/'
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Actually upload the HTML files we grabbed onto GitHub Pages website hosting.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
  test_e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Install dependencies
        run: npm i
        # (Was "npm ci")
      - name: Install playwright browsers
        run: npx playwright install --with-deps
      - name: Run tests
        run: npx playwright test
